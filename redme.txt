1. Dockerfile 
2. docker build (docker build -t tag-name .)
3. docker container build (docker run --rm -d -p 3000:4000 --name container-name image-name)
4. docker stop (docker stop container-id)
5. docker volume (docker run -p <host-port>:<container-port> -v <host-directory>:<container-directory> <image-name>:<tag>)
(docker run --rm -d -p 4000:3000 -v $(pwd):/app --name node-container my-nodejs-app)
6. docker container bun ENV variable (docker run --rm -d -p 3000:4000 -e PORT='4000' --name container-name image-name)
7. docker it (docker exec -it container-id bash)
8. docker logs (docker logs container-id)
9. docker env file location (--env-file ./.env)

============================= mongo Volume command =============================
1. docker volume ls
2. docker volume inspect myvolume (myvolume details)
3. docker volume prune (delete all volumes)
============================= mongo docker command =============================
=> build docker image
docker build -t my-mongodb .

=> create container build 
docker run -d --rm -p 27017:27017 --name mongo-container \
-e MONGO_INITDB_ROOT_USERNAME=root \
-e MONGO_INITDB_ROOT_PASSWORD=testpass \
-v mongodb_data:/data/db my-mongodb

=> create container and mongodb database data location command 
docker run -d --rm -p 27017:27017 --name mongo-container \
-e MONGO_INITDB_ROOT_USERNAME=root \
-e MONGO_INITDB_ROOT_PASSWORD=testpass \
-v $(pwd)/data:/data/db my-mongodb

=> enter mongo docker container
docker exec -it container-id bash

=> mongo database login
mongosh -u root -p testpass